function r(r,e){if(null==r)return;let t=r;for(let n=0;n<e.length;n++){if(null==t||null==t[e[n]])return;t=t[e[n]]}return t}function e(r,t,n){if(0===n.length)return t;const l=n[0];return n.length>1&&(t=e("object"==typeof r&&null!==r&&Object.prototype.hasOwnProperty.call(r,l)?r[l]:Number.isInteger(Number(n[1]))?[]:{},t,Array.prototype.slice.call(n,1))),Number.isInteger(Number(l))&&Array.isArray(r)?r.slice()[l]:Object.assign({},r,{[l]:t})}function t(r,n){if(null==r||0===n.length)return r;if(1===n.length){if(null==r)return r;if(Number.isInteger(n[0])&&Array.isArray(r))return Array.prototype.slice.call(r,0).splice(n[0],1);const e={};for(const t in r)e[t]=r[t];return delete e[n[0]],e}if(null==r[n[0]]){if(Number.isInteger(n[0])&&Array.isArray(r))return Array.prototype.concat.call([],r);const e={};for(const t in r)e[t]=r[t];return e}return e(r,t(r[n[0]],Array.prototype.slice.call(n,1)),[n[0]])}function n(t,n){return n.map((r=>r.split("."))).map((e=>[e,r(t,e)])).filter((r=>void 0!==r[1])).reduce(((r,t)=>e(r,t[1],t[0])),{})}function l(r,e){return e.map((r=>r.split("."))).reduce(((r,e)=>t(r,e)),r)}export{l as a,n as d};
